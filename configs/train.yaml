# train.yaml
# Synthetic Data Generation and Training Configuration

# ======================
# Data Configuration
# ======================

data:
  # ----------------------
  # Directory Paths
  # ----------------------
  directories:
    train_coco_data_dir: \CocoData\train_coco_dataset  # Path to COCO-format training dataset
    val_coco_data_dir: \CocoData\val_coco_dataset      # Path to COCO-format validation dataset
    test_safe_to_desk: True  # Persist generated data to disk (True) or keep in memory (False)
    result_dir: Result\      # Output directory for synthetic data generation results
    background_dir: Bg\      # Directory containing background images
    objects_dir: Obj\        # Directory containing foreground objects

  # ----------------------
  # Output Organization
  # ----------------------
  output_settings:
    merge_outputs: False   # Combine all generated data in single directory
    package_by_background: False  # Organize outputs by background source

  # ----------------------
  # Object Placement
  # ----------------------
  object_placement_settings:
    allow_out_of_bounds: True  # Allow partial object placement outside background
    out_of_bounds_range: [0.1, 0.2]  # Allowed out-of-bounds area ratio (0-1)
    placement_distribution: gaussian  # Object distribution: gaussian/uniform

  # ----------------------
  # Image Generation
  # ----------------------
  image_generation_settings:
    images_per_combination: 1  # Images per background-object combination
    objects_per_image_range: [1, 2]  # Min-max objects per image
    object_scale_range: [0.9, 1.1]   # Object scaling factors (relative)

  # ----------------------
  # Background Processing
  # ----------------------
  background_blur_settings:
    bg_blur_type: GaussianBlur  # Blur type: GaussianBlur/bilateralFilter
    bg_blur_probability: 0.5    # Chance to apply blur to background
    bg_blur_kernel_range: [5, 9]  # Kernel size range for blur effect

  # ----------------------
  # Alpha Channel Processing
  # ----------------------
  alpha_blur_settings:
    alpha_blur_type: GaussianBlur  # Blur type for object alpha channels
    alpha_blur_kernel_range: [3, 7]  # Kernel size range for alpha blur

  # ----------------------
  # Image Resizing
  # ----------------------
  resize_setting:
    resize_width: 320   # Target width for resizing
    resize_height: 180  # Target height for resizing

  # ----------------------
  # Noise Augmentation
  # ----------------------
  noise_settings:
    noise_type: gaussian       # Noise type: gaussian/uniform
    noise_level_range: [0.05, 0.1]  # Noise intensity range

  # ----------------------
  # Geometric Augmentations
  # ----------------------
  transformations:
    flip_probability: 0.5  # Horizontal flip probability

  # ----------------------
  # Output Specifications
  # ----------------------
  output_format:
    output_format: segmentation  # Output type: segmentation/classification

  # ----------------------
  # Advanced Settings
  # ----------------------
  miscellaneous:
    depth: True  # Enable depth-aware object placement

  # ----------------------
  # Rotation Augmentations
  # ----------------------
  rotation_settings:
    foreground_rotation: False       # Rotate foreground objects
    background_rotation: True        # Rotate background images
    background_rotation_angle: [-30, 30]  # Background rotation range (degrees)
    foreground_rotation_angle: [-30, 30]  # Foreground rotation range (degrees)

  # ----------------------
  # Color Augmentations
  # ----------------------
  color_jitter_settings:
    jitter_probability: 0.5       # Chance to apply color jitter
    brightness_range: [0.8, 1.2]  # Brightness adjustment range
    contrast_range: [0.8, 1.2]    # Contrast adjustment range
    saturation_range: [0.8, 1.2]  # Saturation adjustment range
    hue_range: [-0.1, 0.1]        # Hue adjustment range

  # ----------------------
  # Dataset Scaling
  # ----------------------
  dataset_settings:
    scale_factor: 1.5  # Image scaling factor for preprocessing

# ======================
# Model Configuration
# ======================
model:
  id: 1                  # Model ID from available options
  name:                  # Model name override (optional)
  weights:               # Path to pretrained weights (optional)
  create_new_model: False  # Initialize new model (True) or load existing (False)
  saves_count: 0         # Number of checkpoints to save (0 = save every epoch)
  directory: train_results  # Model output directory

# ======================
# Training Parameters
# ======================
train:
  synthetic_mask_pre_calculation_mode: loss  # Mask handling: loss/dataloader
  natural_data_mask_saving:             # Natural data mask storage
  natural_data_mask_pre_calculation_mode: dataloader  # Natural mask computation
  lr: -5               # Learning rate as 10^N (10^-5 = 0.00001)
  epoch: 10            # Total training epochs
  workers: 10         # Data loading workers
  batch: 12            # Training batch size
  n_accum: 4           # Gradient accumulation steps
  alpha: 1e-4          # Loss component weight
  beta: 1.0            # Loss component weight
  gamma: 1.0           # Loss component weight

# ======================
# Validation Settings
# ======================
val:
  mini_batch: 8        # Validation batch size
  workers: 8           # Validation data workers
  every: 1             # Validate every N epochs

# ======================
# Logging & Visualization
# ======================
verbose:
  print: 2             # Verbosity level (0-2)
  plot: true           # Enable training progress plots